/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../../../../../common";
import type {
  TransparentUpgradeableProxy,
  TransparentUpgradeableProxyInterface,
} from "../../../../../../@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol/TransparentUpgradeableProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address",
      },
      {
        internalType: "address",
        name: "admin_",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526040516119bd3803806119bd833981810160405281019061002591906106cf565b82816100398282600061005260201b60201c565b505061004a8261008a60201b60201c565b5050506109db565b610061836100e260201b60201c565b60008251118061006e5750805b1561008557610083838361013760201b60201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6100b961016a60201b60201c565b826040516100c892919061074d565b60405180910390a16100df816101c760201b60201c565b50565b6100f1816102ad60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b606061016283836040518060600160405280602781526020016119966027913961037260201b60201c565b905092915050565b600061019e7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b6103fe60201b60201c565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610236576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022d906107f9565b60405180910390fd5b806102697fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b6103fe60201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6102bc8161040860201b60201c565b6102fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f29061088b565b60405180910390fd5b8061032e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6103fe60201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808573ffffffffffffffffffffffffffffffffffffffff168560405161039c91906108f2565b600060405180830381855af49150503d80600081146103d7576040519150601f19603f3d011682016040523d82523d6000602084013e6103dc565b606091505b50915091506103f38683838761042b60201b60201c565b925050509392505050565b6000819050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561049357600083510361048b5761044b8561040860201b60201c565b61048a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048190610955565b60405180910390fd5b5b8290506104a4565b6104a383836104ac60201b60201c565b5b949350505050565b6000825111156104bf5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f391906109b9565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061053b82610510565b9050919050565b61054b81610530565b811461055657600080fd5b50565b60008151905061056881610542565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105c182610578565b810181811067ffffffffffffffff821117156105e0576105df610589565b5b80604052505050565b60006105f36104fc565b90506105ff82826105b8565b919050565b600067ffffffffffffffff82111561061f5761061e610589565b5b61062882610578565b9050602081019050919050565b60005b83811015610653578082015181840152602081019050610638565b60008484015250505050565b600061067261066d84610604565b6105e9565b90508281526020810184848401111561068e5761068d610573565b5b610699848285610635565b509392505050565b600082601f8301126106b6576106b561056e565b5b81516106c684826020860161065f565b91505092915050565b6000806000606084860312156106e8576106e7610506565b5b60006106f686828701610559565b935050602061070786828701610559565b925050604084015167ffffffffffffffff8111156107285761072761050b565b5b610734868287016106a1565b9150509250925092565b61074781610530565b82525050565b6000604082019050610762600083018561073e565b61076f602083018461073e565b9392505050565b600082825260208201905092915050565b7f455243313936373a206e65772061646d696e20697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006107e3602683610776565b91506107ee82610787565b604082019050919050565b60006020820190508181036000830152610812816107d6565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b6000610875602d83610776565b915061088082610819565b604082019050919050565b600060208201905081810360008301526108a481610868565b9050919050565b600081519050919050565b600081905092915050565b60006108cc826108ab565b6108d681856108b6565b93506108e6818560208601610635565b80840191505092915050565b60006108fe82846108c1565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b600061093f601d83610776565b915061094a82610909565b602082019050919050565b6000602082019050818103600083015261096e81610932565b9050919050565b600081519050919050565b600061098b82610975565b6109958185610776565b93506109a5818560208601610635565b6109ae81610578565b840191505092915050565b600060208201905081810360008301526109d38184610980565b905092915050565b610fac806109ea6000396000f3fe6080604052366100135761001161001d565b005b61001b61001d565b005b610025610299565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361028f576060600080357fffffffff00000000000000000000000000000000000000000000000000000000169050633659cfe660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036100dc576100d56102f0565b9150610287565b634f1ef28660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036101375761013061034f565b9150610286565b638f28397060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036101925761018b61039c565b9150610285565b63f851a44060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036101ed576101e66103e9565b9150610284565b635c60da1b60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361024857610241610425565b9150610283565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027a906109c6565b60405180910390fd5b5b5b5b5b815160208301f35b610297610461565b565b60006102c77fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b61047b565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606102fa610485565b60008036600490809261030f939291906109fa565b81019061031c9190610a9d565b905061033981604051806020016040528060008152506000610494565b6040518060200160405280600081525091505090565b60606000806000366004908092610368939291906109fa565b8101906103759190610c10565b9150915061038582826001610494565b604051806020016040528060008152509250505090565b60606103a6610485565b6000803660049080926103bb939291906109fa565b8101906103c89190610a9d565b90506103d3816104c0565b6040518060200160405280600081525091505090565b60606103f3610485565b60006103fd610299565b9050806040516020016104109190610c8d565b60405160208183030381529060405291505090565b606061042f610485565b600061043961050c565b90508060405160200161044c9190610c8d565b60405160208183030381529060405291505090565b61046961051b565b61047961047461050c565b61051d565b565b6000819050919050565b6000341461049257600080fd5b565b61049d83610543565b6000825111806104aa5750805b156104bb576104b98383610592565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104e9610299565b826040516104f8929190610ca8565b60405180910390a1610509816105bf565b50565b600061051661069f565b905090565b565b3660008037600080366000845af43d6000803e806000811461053e573d6000f35b3d6000fd5b61054c816106f6565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60606105b78383604051806060016040528060278152602001610f50602791396107af565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361062e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062590610d43565b60405180910390fd5b8061065b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b61047b565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006106cd7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61047b565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106ff81610835565b61073e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073590610dd5565b60405180910390fd5b8061076b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61047b565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516107d99190610e66565b600060405180830381855af49150503d8060008114610814576040519150601f19603f3d011682016040523d82523d6000602084013e610819565b606091505b509150915061082a86838387610858565b925050509392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b606083156108ba5760008351036108b25761087285610835565b6108b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a890610ec9565b60405180910390fd5b5b8290506108c5565b6108c483836108cd565b5b949350505050565b6000825111156108e05781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109149190610f2d565b60405180910390fd5b600082825260208201905092915050565b7f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60008201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760208201527f6574000000000000000000000000000000000000000000000000000000000000604082015250565b60006109b060428361091d565b91506109bb8261092e565b606082019050919050565b600060208201905081810360008301526109df816109a3565b9050919050565b6000604051905090565b600080fd5b600080fd5b60008085851115610a0e57610a0d6109f0565b5b83861115610a1f57610a1e6109f5565b5b6001850283019150848603905094509492505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6a82610a3f565b9050919050565b610a7a81610a5f565b8114610a8557600080fd5b50565b600081359050610a9781610a71565b92915050565b600060208284031215610ab357610ab2610a35565b5b6000610ac184828501610a88565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b1d82610ad4565b810181811067ffffffffffffffff82111715610b3c57610b3b610ae5565b5b80604052505050565b6000610b4f6109e6565b9050610b5b8282610b14565b919050565b600067ffffffffffffffff821115610b7b57610b7a610ae5565b5b610b8482610ad4565b9050602081019050919050565b82818337600083830152505050565b6000610bb3610bae84610b60565b610b45565b905082815260208101848484011115610bcf57610bce610acf565b5b610bda848285610b91565b509392505050565b600082601f830112610bf757610bf6610aca565b5b8135610c07848260208601610ba0565b91505092915050565b60008060408385031215610c2757610c26610a35565b5b6000610c3585828601610a88565b925050602083013567ffffffffffffffff811115610c5657610c55610a3a565b5b610c6285828601610be2565b9150509250929050565b6000610c7782610a3f565b9050919050565b610c8781610c6c565b82525050565b6000602082019050610ca26000830184610c7e565b92915050565b6000604082019050610cbd6000830185610c7e565b610cca6020830184610c7e565b9392505050565b7f455243313936373a206e65772061646d696e20697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610d2d60268361091d565b9150610d3882610cd1565b604082019050919050565b60006020820190508181036000830152610d5c81610d20565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b6000610dbf602d8361091d565b9150610dca82610d63565b604082019050919050565b60006020820190508181036000830152610dee81610db2565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015610e29578082015181840152602081019050610e0e565b60008484015250505050565b6000610e4082610df5565b610e4a8185610e00565b9350610e5a818560208601610e0b565b80840191505092915050565b6000610e728284610e35565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000610eb3601d8361091d565b9150610ebe82610e7d565b602082019050919050565b60006020820190508181036000830152610ee281610ea6565b9050919050565b600081519050919050565b6000610eff82610ee9565b610f09818561091d565b9350610f19818560208601610e0b565b610f2281610ad4565b840191505092915050565b60006020820190508181036000830152610f478184610ef4565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207eae06d491456b2bbdb46ba80b6800806f8cdd385734a6948f9e07a7fd35e06664736f6c634300081b0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564";

type TransparentUpgradeableProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransparentUpgradeableProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransparentUpgradeableProxy__factory extends ContractFactory {
  constructor(...args: TransparentUpgradeableProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _logic: AddressLike,
    admin_: AddressLike,
    _data: BytesLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_logic, admin_, _data, overrides || {});
  }
  override deploy(
    _logic: AddressLike,
    admin_: AddressLike,
    _data: BytesLike,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(_logic, admin_, _data, overrides || {}) as Promise<
      TransparentUpgradeableProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TransparentUpgradeableProxy__factory {
    return super.connect(runner) as TransparentUpgradeableProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransparentUpgradeableProxyInterface {
    return new Interface(_abi) as TransparentUpgradeableProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TransparentUpgradeableProxy {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TransparentUpgradeableProxy;
  }
}
